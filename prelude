'nop { { } } def
'get { nop nop lookup } def

'each list 1 dupn get def
'dict-keys dict 'keys get def
'import-keys {
  { 1 dupn 1 dupn get def } each
  pop
} def

'import {
  dup dict-keys import-keys 
} def

[ dict term-index construction query context io list arith string ] { import } each

'Type { 0 universe } def

'times { range { pop dup exec } each pop } def

'foralls { { extro-forall } swap times } def
'lambdas { { extro-lambda } swap times } def
'applys { range { pop apply } each } def
'applyl { { swap apply } each } def

'printf { format print pop } def
'show { "%v\n" printf } def
'show-stack { stack { show } each } def
'show-context { "" hypotheses { dup variable type swap "%s : %v\n%s" format } each print pop } def

'showdef { pattern-index 1 swapn swap index-insert set-pattern-index } def

'stache { "%v" printf } def

'vis { show-context "-------\n" printf show-stack } def

'-> { dup 1 swapn swap intro { {@ dup @} variable pull } def } def
'! 'extro-lambda $ def
'? 'extro-forall $ def

'export { exports swap { dup $ insert } each 'exports swap def } def

'( '[ $ def
') { ] applyl } def

'reverse { [ ] swap { cons } each } def

'defconstr { 1 dupn swap showdef def } def

'mustache. { show } def
'tex { 'mustache. { "$%l$\n" printf 'mustache. {@ dup $ @} def } def } def
'svg { 'mustache. { "<svg class='formula' width='150px' height='2em' viewBox='0 0 100 100' xmlns=\"http://www.w3.org/2000/svg\"><text class='formula-text' x='0' y='100'>%g</text></svg>" printf 'mustache. {@ dup $ @} def } def } def
'raw { 'mustache. { "%s\n" printf 'mustache. {@ dup $ @} def } def } def

'recursor { dup 2 shaft -> variable mu ! } def

'collect { { 'exports empty def {@ @} exec exports {@ vocabulary @} set-vocabulary } exec } def
'module { dup source-dir "%s%s" format source swap output-dir "%s%s.mdc" format redirect } def
'require { { dup "Cacheing module %s\n" printf {@ dup @} { module } collect } swap cache-dir "%s%s.mdo" format cache } def

